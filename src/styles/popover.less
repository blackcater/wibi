@import "common";

//
// Popovers
// --------------------------------------------------
.@{ns}popover {
  display: inline-block;

  &-rel {
    position: relative;
    display: inline-block;
    width: inherit;
  }

  &-popper {
    // Our parent element can be arbitrary since popovers are by default inserted as a sibling of their target element.
    // So reset our font and text properties to avoid inheriting weird values.
    .reset-text();
    .drop-shadow(0 1px 8px rgba(0, 0, 0, .12));

    position: absolute;
    top: 0;
    left: 0;
    z-index: @zindex-popover;
    display: block;
    padding: 12px;
    font-size: @font-size-base;
    background-color: @popover-bg;
    background-clip: padding-box;
    border-radius: @popover-border-radius;

    // .arrow is outer, .arrow:after is inner
    > .arrow {
      border-width: @popover-arrow-outer-width;

      &,
      &::after {
        position: absolute;
        display: block;
        width: 0;
        height: 0;
        border-color: transparent;
        border-style: solid;
      }

      &::after {
        border-width: @popover-arrow-width;
        content: "";
      }
    }

    // Popover Title
    .@{ns}popover-title {
      margin: 0; // reset heading margin
      font-size: @font-size-base;
      line-height: @line-height-base;
    }

    // Popover Content
    .@{ns}popover-content {
      margin-top: 8px;
      font-size: @font-size-small;
      line-height: @line-height-small;
    }

    // Adjust full popover arrow position
    &-full {
      // Reset content padding when [full]
      padding: 0;

      // Reset content margin-top when [full]
      .@{ns}popover-content {
        margin-top: 0;
      }
    }

    // Common style for .placement-top*
    &[x-placement^=top] {
      margin-top: -@popover-arrow-gap-lg;
      .set-translate(0, -@popover-translate-distance);

      > .arrow {
        margin-left: -@popover-arrow-outer-width;
        border-bottom-width: 0;
        bottom: -@popover-arrow-outer-width;
        border-top-color: @popover-arrow-outer-bg;

        &::after {
          bottom: 1px;
          margin-left: -@popover-arrow-width;
          border-bottom-width: 0;
          border-top-color: @popover-arrow-color;
        }
      }
    }

    // Common style for .placement-right*
    &[x-placement^=right] {
      margin-left: @popover-arrow-gap-lg;
      .set-translate(@popover-translate-distance, 0);

      > .arrow {
        left: -@popover-arrow-outer-width;
        margin-top: -@popover-arrow-outer-width;
        border-left-width: 0;
        border-right-color: @popover-arrow-outer-bg;

        &::after {
          left: 1px;
          bottom: -@popover-arrow-width;
          border-left-width: 0;
          border-right-color: @popover-arrow-color;
        }
      }
    }

    // Common style for .placement-bottom*
    &[x-placement^=bottom] {
      margin-top: @popover-arrow-gap-lg;
      .set-translate(0, @popover-translate-distance);

      > .arrow {
        margin-left: -@popover-arrow-outer-width;
        border-top-width: 0;
        top: -@popover-arrow-outer-width;
        border-bottom-color: @popover-arrow-outer-bg;

        &::after {
          top: 1px;
          margin-left: -@popover-arrow-width;
          border-top-width: 0;
          border-bottom-color: @popover-arrow-color;
        }
      }
    }

    // Common style for .placement-left*
    &[x-placement^=left] {
      margin-left: -@popover-arrow-gap-lg;
      .set-translate(-@popover-translate-distance, 0);

      > .arrow {
        right: -@popover-arrow-outer-width;
        margin-top: -@popover-arrow-outer-width;
        border-right-width: 0;
        border-left-color: @popover-arrow-outer-bg;

        &::after {
          right: 1px;
          border-right-width: 0;
          border-left-color: @popover-arrow-color;
          bottom: -@popover-arrow-width;
        }
      }
    }
  }
}

// Popover Animation
.popover-fade-enter-active {
  transition: opacity .15s linear, left .15s ease-in, top .15s ease-in;
}

.popover-fade-leave-active {
  transition: opacity .1s linear, left .1s ease-out, top .1s ease-out;
}

.popover-fade-enter,
.popover-fade-leave-to {
  opacity: 0;

  // Common style for .placement-top*
  &[x-placement^=top] {
    top: 2px;
  }

  // Common style for .placement-bottom*
  &[x-placement^=bottom] {
    top: -2px;
  }

  // Common style for .placement-right*
  &[x-placement^=right] {
    left: -2px;
  }

  // Common style for .placement-lef*
  &[x-placement^=left] {
    left: 2px;
  }
}
